// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Network
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Packet : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Packet GetRootAsPacket(ByteBuffer _bb) { return GetRootAsPacket(_bb, new Packet()); }
  public static Packet GetRootAsPacket(ByteBuffer _bb, Packet obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Packet __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float Number { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)3.1415f; } }

  public static Offset<Network.Packet> CreatePacket(FlatBufferBuilder builder,
      float number = 3.1415f) {
    builder.StartTable(1);
    Packet.AddNumber(builder, number);
    return Packet.EndPacket(builder);
  }

  public static void StartPacket(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddNumber(FlatBufferBuilder builder, float number) { builder.AddFloat(0, number, 3.1415f); }
  public static Offset<Network.Packet> EndPacket(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Network.Packet>(o);
  }
  public static void FinishPacketBuffer(FlatBufferBuilder builder, Offset<Network.Packet> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedPacketBuffer(FlatBufferBuilder builder, Offset<Network.Packet> offset) { builder.FinishSizePrefixed(offset.Value); }
}


}
